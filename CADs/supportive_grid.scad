NUM_THREAD_X = 6;
NUM_THREAD_Y = 6;
THREAD_DISTANCE_X = 15;
THREAD_DISTANCE_Y = 15;
THREAD_WIDTH_X = 2;
THREAD_WIDTH_Y = 2;
THREAD_THICKNESS_X = 2.5;
THREAD_THICKNESS_Y = 2.5;
WALL_THICKNESS = 4;
WALL_HEIGHT = 5;


// create grids
for (offsetX = [0 : THREAD_DISTANCE_X : THREAD_DISTANCE_X * NUM_THREAD_X])
    translate([offsetX, 0, 0])
        cube([THREAD_WIDTH_X, THREAD_DISTANCE_Y * NUM_THREAD_Y + THREAD_WIDTH_Y, THREAD_THICKNESS_X]);

for (offsetY = [0 : THREAD_DISTANCE_Y : THREAD_DISTANCE_Y * NUM_THREAD_Y])
    translate([0, offsetY, 0])
        cube([THREAD_DISTANCE_X * NUM_THREAD_X + THREAD_WIDTH_X, THREAD_WIDTH_Y, THREAD_THICKNESS_Y]);
// done creating grids


// create walls
union() {
    for (offsetX = [-WALL_THICKNESS, THREAD_WIDTH_Y + THREAD_DISTANCE_X * NUM_THREAD_X])
        translate([offsetX, -WALL_THICKNESS, 0])
            cube([WALL_THICKNESS, THREAD_DISTANCE_Y * NUM_THREAD_Y + THREAD_WIDTH_Y + 2 * WALL_THICKNESS, WALL_HEIGHT]);

    for (offsetY = [-WALL_THICKNESS, THREAD_WIDTH_X + THREAD_DISTANCE_Y * NUM_THREAD_Y])
        translate([-WALL_THICKNESS, offsetY, 0])
            cube([THREAD_DISTANCE_X * NUM_THREAD_X + THREAD_WIDTH_X + 2 * WALL_THICKNESS, WALL_THICKNESS, WALL_HEIGHT]);
}
